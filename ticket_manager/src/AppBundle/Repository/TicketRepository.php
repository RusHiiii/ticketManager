<?php

namespace AppBundle\Repository;
use AppBundle\Entity\User;
use DateTime;

/**
 * TicketRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TicketRepository extends \Doctrine\ORM\EntityRepository
{
  public function findFerme(User $u){

    $test = $this->createQueryBuilder('t')
                ->where('t.ticketDateEnd is not null AND t.ticketUserManager = ?1')
                ->setParameters(array(1 => $u->getId()))
                ->getQuery()
                ->getResult();
    return $test;
  }

  public function findOuvert(User $u){
    $test = $this->createQueryBuilder('t')
                ->where('t.ticketDateEnd is null AND t.ticketUserManager = ?1')
                ->setParameters(array(1 => $u->getId()))
                ->getQuery()
                ->getResult();
    return $test;
  }

  public function findFermeLastWeek(){
    $test = $this->createQueryBuilder('t')
                ->where('t.ticketDateEnd is not null AND t.ticketDateEnd > ?1')
                ->setParameters(array(1 => new DateTime('-7 days')))
                ->getQuery()
                ->getResult();
    return $test;
  }

  public function findFermeLastMonth(){
    $test = $this->createQueryBuilder('t')
                ->where('t.ticketDateEnd is not null AND t.ticketDateEnd > ?1')
                ->setParameters(array(1 => new DateTime('-31 days')))
                ->getQuery()
                ->getResult();
    return $test;
  }

  public function findOuvertLastWeek(){
    $test = $this->createQueryBuilder('t')
                ->where('t.ticketDateStart > ?1')
                ->setParameters(array(1 => new DateTime('-7 days')))
                ->getQuery()
                ->getResult();
    return $test;
  }

  public function findOuvertLastMonth(){
    $test = $this->createQueryBuilder('t')
                ->where('t.ticketDateStart > ?1')
                ->setParameters(array(1 => new DateTime('-31 days')))
                ->getQuery()
                ->getResult();
    return $test;
  }
}
